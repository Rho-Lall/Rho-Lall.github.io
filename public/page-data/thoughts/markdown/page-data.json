{"componentChunkName":"component---src-pages-thoughts-mdx-slug-js","path":"/thoughts/markdown/","result":{"data":{"mdx":{"frontmatter":{"title":"Markdown Example","date":"January 1, 2022","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/476c3e198e6ab5509bdde64f9297b299/87706/development_html.png","srcSet":"/static/476c3e198e6ab5509bdde64f9297b299/f80f8/development_html.png 320w,\n/static/476c3e198e6ab5509bdde64f9297b299/9a63f/development_html.png 640w,\n/static/476c3e198e6ab5509bdde64f9297b299/87706/development_html.png 1280w","sizes":"(min-width: 1280px) 1280px, 100vw"},"sources":[{"srcSet":"/static/476c3e198e6ab5509bdde64f9297b299/c0bcc/development_html.webp 320w,\n/static/476c3e198e6ab5509bdde64f9297b299/17574/development_html.webp 640w,\n/static/476c3e198e6ab5509bdde64f9297b299/71d4d/development_html.webp 1280w","type":"image/webp","sizes":"(min-width: 1280px) 1280px, 100vw"}]},"width":1280,"height":720}}}},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Markdown Example\",\n  \"date\": \"2022-01-01\",\n  \"hero_image\": \"./media/development_html.png\",\n  \"hero_alt\": \"Markdown\",\n  \"expertise\": \"Development\",\n  \"author\": \"Rho Lall\",\n  \"short\": \" Notes on using Markdown that I find useful and want to keep handy.  \"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h1\", null, \"H1\"), mdx(\"h2\", null, \"H2\"), mdx(\"h3\", null, \"H3\"), mdx(\"h4\", null, \"H4\"), mdx(\"h5\", null, \"H5\"), mdx(\"h6\", null, \"H6\"), mdx(\"p\", null, \"list \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"one\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"two\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"three\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"writting out some code\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Test Quote\\nthis is a quote\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"~ rho\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"73bd9cb7-e165-5aa7-8d71-d4824b449abb","slug":"markdown","__params":{"slug":"markdown"}}},"staticQueryHashes":["1609057278"]}