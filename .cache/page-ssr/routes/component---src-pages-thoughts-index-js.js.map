{"version":3,"file":"component---src-pages-thoughts-index-js.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACO;AACA;AACA;AACA;AACA;AACA;;;ACIP,KAAMS,CAAAA,MAAM,CAAG,CAAC,CAAEC,SAAF,CAAaC,QAAb,CAAD,GAA4B,CAEvC,KAAMC,CAAAA,IAAI,CAAGV,uCAAc,cAA3B,CAUA,mBACI,+BAAK,SAAS,CAAEC,SAAhB,eACI,qCAAQO,SAAR,OAAsBE,IAAI,CAACC,IAAL,CAAUC,YAAV,CAAuBC,KAA7C,CADJ,cAGI,kCAAQ,SAAS,CAAEX,SAAnB,EAA+BQ,IAAI,CAACC,IAAL,CAAUC,YAAV,CAAuBC,KAAtD,CAHJ,cAII,gDACI,8BAAI,SAAS,CAAET,QAAf,eACI,8BAAI,SAAS,CAAEC,WAAf,eAA4B,wBAAC,yBAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAEC,WAAxB,SAA5B,CADJ,cAEI,8BAAI,SAAS,CAAED,WAAf,eAA4B,wBAAC,yBAAD,EAAM,EAAE,CAAC,QAAT,CAAkB,SAAS,CAAEC,WAA7B,aAA5B,CAFJ,cAGI,8BAAI,SAAS,CAAED,WAAf,eAA4B,wBAAC,yBAAD,EAAM,EAAE,CAAC,WAAT,CAAqB,SAAS,CAAEC,WAAhC,oBAA5B,CAHJ,CADJ,CAJJ,cAYI,iDACI,8BAAI,SAAS,CAAEH,OAAf,EAAyBK,SAAzB,CADJ,CAEKC,QAFL,CAZJ,CADJ,CAoBH,CAhCD,CAkCA,6CAAeF,MAAf;;;;;;;;;;;;;;;ACvCA,KAAMO,CAAAA,QAAQ,CAAG,CAAC,CAAEJ,IAAF,CAAD,GAAc,CAC3B,mBACI,iDAAC,mEAAD,EAAQ,SAAS,CAAE,iBAAnB,EAGQA,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,eAElB,4DAAS,GAAG,CAAEA,IAAI,CAACC,EAAnB,eAEI,wEACI,iDAAC,wCAAD,EAAM,EAAE,CAAG,aAAYD,IAAI,CAACE,IAAK,EAAjC,EACKF,IAAI,CAACG,WAAL,CAAiBR,KADtB,CADJ,CAFJ,cAQI,qEAAYK,IAAI,CAACG,WAAL,CAAiBC,IAA7B,CARJ,CAFJ,CAHR,CADJ,CAuBH,CAxBD,CA0BO,KAAMC,CAAAA,KAAK,aAAX,CAsBP,iEAAeT,QAAf","sources":["webpack://assume-wisely-blog/./src/components/layout.module.css","webpack://assume-wisely-blog/./src/components/layout.js","webpack://assume-wisely-blog/./src/pages/thoughts/index.js"],"sourcesContent":["// Exports\nexport var container = \"layout-module--container--eLBMS\";\nexport var siteTitle = \"layout-module--site-title--5N6mf\";\nexport var heading = \"layout-module--heading--8VjLO\";\nexport var navLinks = \"layout-module--nav-links--EROwB\";\nexport var navLinkItem = \"layout-module--nav-link-item--pfCo2\";\nexport var navLinkText = \"layout-module--nav-link-text--ac2nV\";\n","import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {    container,\n            siteTitle,\n            heading,\n            navLinks,\n            navLinkItem,\n            navLinkText\n        } from './layout.module.css'\n\nconst Layout = ({ pageTitle, children}) => {\n\n    const data = useStaticQuery(graphql`\n        query siteTitle {\n            site {\n            siteMetadata {\n                title\n            }\n            }\n        }\n    `)\n\n    return (\n        <div className={container}>\n            <title>{pageTitle} | {data.site.siteMetadata.title}</title>\n            \n            <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n            <nav>\n                <ul className={navLinks}>\n                    <li className={navLinkItem}><Link to=\"/\" className={navLinkText}>Home</Link></li>\n                    <li className={navLinkItem}><Link to=\"/about\" className={navLinkText}>About Me</Link></li>\n                    <li className={navLinkItem}><Link to=\"/thoughts\" className={navLinkText}>Random Thoughts</Link></li>\n                </ul>\n            </nav>\n\n            <main>\n                <h1 className={heading}>{pageTitle}</h1>\n                {children}\n            </main>\n        </div>\n    )\n\n}\n\nexport default Layout","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\n\n\nconst BlogPage = ({ data }) => {\n    return (\n        <Layout pageTitle={'Random Thoughts'}>    \n\n            {\n                data.allMdx.nodes.map((node) => (\n\n                    <article key={node.id}>\n\n                        <h2>\n                            <Link to={`/thoughts/${node.slug}`}>\n                                {node.frontmatter.title}\n                            </Link>\n                        </h2>\n                        \n                        <p>Posted: {node.frontmatter.date}</p>\n\n                    </article>\n                ))\n            }\n\n        </Layout> \n    )\n\n}\n\nexport const query = graphql`\n    query thoughtList {\n        allMdx(sort: {fields: frontmatter___date, order: DESC}) {\n            nodes {\n                frontmatter {\n                    date(formatString: \"MMMM D, YYYY\")\n                    title\n                }\n                id\n                slug\n                parent {\n                    ... on File {\n                        id\n                        name\n                        modifiedTime\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default BlogPage"],"names":["React","Link","useStaticQuery","container","siteTitle","heading","navLinks","navLinkItem","navLinkText","Layout","pageTitle","children","data","site","siteMetadata","title","BlogPage","allMdx","nodes","map","node","id","slug","frontmatter","date","query"],"sourceRoot":""}