{"version":3,"file":"component---src-pages-index-js-07a4ad28fe000c945742.js","mappings":"qLACWA,EAAc,sCC2DzB,EAnDe,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAEnBC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACI,uBAAKC,UAAU,8BACX,6BAAQJ,EAAR,MAAsBE,EAAKG,KAAKC,aAAaC,OAE7C,uBAAKH,UAAU,4CACX,uBAAKA,UAAU,aACX,gBAAC,KAAD,CAAMI,GAAG,KAAT,aAKJ,uBAAKJ,UAAW,yBACZ,gBAAC,KAAD,CAAMI,GAAG,UAAT,kBAOR,uBAAKJ,UAAU,sCACX,sBAAIA,UDvCE,mCCwCF,sBAAIA,UAAWL,GAAa,gBAAC,KAAD,CAAMS,GAAG,IAAIJ,UAAU,gBAAvB,oBAC5B,sBAAIA,UAAWL,GAAa,gBAAC,KAAD,CAAMS,GAAG,IAAIJ,UAAU,gBAAvB,iBAC5B,sBAAIA,UAAWL,GAAa,gBAAC,KAAD,CAAMS,GAAG,IAAIJ,UAAU,gBAAvB,gBAC5B,sBAAIA,UAAWL,GAAa,gBAAC,KAAD,CAAMS,GAAG,IAAIJ,UAAU,gBAAvB,WAC5B,sBAAIA,UAAWL,GAAa,gBAAC,KAAD,CAAMS,GAAG,IAAIJ,UAAU,gBAAvB,iBAIpC,4BAEKH,M,wECkEjB,UA1GkB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEVO,EAAOP,EAAKQ,OAAOC,MAAM,GAEjC,OACE,gBAAC,IAAD,CAAQX,UAAW,8CAEf,uBAAKI,UAAU,iBACX,uBAAKA,UAAU,kBAEX,gBAAC,EAAAQ,EAAD,CACIC,OAAOC,EAAAA,EAAAA,GAASL,EAAKM,YAAYC,YACjCC,IAAI,oBAKZ,uBAAKb,UAAU,2BACX,2BACI,iCAAQ,wBAAMA,UAAU,gBAAgBK,EAAKM,YAAYG,YACzD,sBAAId,UAAU,WAAWK,EAAKM,YAAYR,OAC1C,2BACA,yBAAIE,EAAKM,YAAYI,QAGzB,uBAAKf,UAAU,WACX,2BACA,qBAAGA,UAAU,IAAIK,EAAKM,YAAYK,MAClC,qBAAGhB,UAAU,IAAIK,EAAKM,YAAYM,WAQ9C,2BACA,uBAAKjB,UAAU,mCAEPF,EAAKQ,OAAOC,MAAMW,MAAM,GAAGC,KAAI,SAACC,GAAD,OAEvB,2BAASC,IAAKD,EAAKE,GAAItB,UAAU,qCAE7B,iCAAQ,wBAAMA,UAAU,gBAAgBoB,EAAKT,YAAYG,YAEzD,0BACI,gBAAC,KAAD,CAAMV,GAAE,aAAegB,EAAKG,KAAQvB,UAAU,WACzCoB,EAAKT,YAAYR,QAI1B,gBAAC,EAAAK,EAAD,CACIC,OAAOC,EAAAA,EAAAA,GAASU,EAAKT,YAAYC,YACjCC,IAAI,mBAGR,yBAAIO,EAAKT,YAAYI,OAErB,uBAAKf,UAAU,WACX,2BACA,yBAAIoB,EAAKT,YAAYK,MACrB,yBAAII,EAAKT,YAAYM","sources":["webpack://assume-wisely-blog/./src/components/layout.module.css","webpack://assume-wisely-blog/./src/components/layout.js","webpack://assume-wisely-blog/./src/pages/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var navLinkItem = \"layout-module--nav-link-item--pfCo2\";\nexport var navLinks = \"layout-module--nav-links--EROwB\";\nexport var siteTitle = \"layout-module--site-title--5N6mf\";","import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport \"../components/global.css\"\nimport {    navLinks,\n            navLinkItem,\n        } from './layout.module.css'\n\n\nconst Layout = ({ pageTitle, children}) => {\n\n    const data = useStaticQuery(graphql`\n        query siteTitle {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    return (\n        <div className=' container max-w-screen-xl'>\n            <title>{pageTitle} | {data.site.siteMetadata.title}</title>\n\n            <nav className='flex flex-row justify-end items-end pb-5'>\n                <div className=' text-7xl' >\n                    <Link to='/'>\n                    Rho Lall\n                    </Link>\n                </div>\n                \n                <div className= \" text-secondary px-2 \" >   \n                    <Link to=\"/about\">\n                        ( About Me )\n                    </Link>    \n                </div>    \n                \n            </nav>\n\n            <nav className='flex flex-row justify-evenly pb-10'>\n                <ul className={navLinks}>\n                    <li className={navLinkItem}><Link to=\"/\" className='text-primary'>BUSINESS ACUMEN</Link></li>\n                    <li className={navLinkItem}><Link to=\"/\" className='text-primary'>DATA SCIENCE</Link></li>\n                    <li className={navLinkItem}><Link to=\"/\" className='text-primary'>DEVELOPMENT</Link></li>\n                    <li className={navLinkItem}><Link to=\"/\" className='text-primary'>DESIGN</Link></li>\n                    <li className={navLinkItem}><Link to=\"/\" className='text-primary'>MY JOURNEY</Link></li>\n                </ul>\n            </nav>\n\n            <main >\n                \n                {children}\n\n            </main>\n        </div>\n    )\n\n}\n\nexport default Layout","\n//import { StaticImage } from 'gatsby-plugin-image'\nimport * as React from 'react'\nimport {Link, graphql } from 'gatsby'\n//import { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport Layout from '../components/layout'\n\n// Starting Point to deploy production version of blog\n// Add new branch, source.\n\n\nconst IndexPage = ({data}) => {\n\n    const head = data.allMdx.nodes[0];\n\n  return (\n    <Layout pageTitle={'Data Savvy for Data Driven Decision Making'}>\n\n        <div className='flex flex-row'>\n            <div className='basis-2/3 px-2'>\n\n                <GatsbyImage\n                    image={getImage(head.frontmatter.hero_image)}\n                    alt='test alt text.'\n                />\n\n            </div>\n\n            <div className='basis-1/3 flex flex-col'>\n                <div>\n                    <p>From <span className='text-primary'>{head.frontmatter.expertise}</span></p>\n                    <h2 className='text-xl'>{head.frontmatter.title}</h2>\n                    <br/>\n                    <p>{head.frontmatter.short}</p>\n                </div>\n\n                <div className='mt-auto'>\n                    <hr/>\n                    <p className=''>{head.frontmatter.date}</p>\n                    <p className=''>{head.frontmatter.author}</p>\n                </div>\n                \n\n            </div>\n\n\n        </div>\n        <br/>\n        <div className='flex flex-row flex-wrap inline '>\n            { \n                data.allMdx.nodes.slice(1).map((node) => (\n\n                        <article key={node.id} className='basis-1/3 px-2 pb-2 flex flex-col'>\n\n                            <p>From <span className='text-primary'>{node.frontmatter.expertise}</span></p>\n\n                            <h2>\n                                <Link to={`/thoughts/${node.slug}`} className='text-xl'>\n                                    {node.frontmatter.title}\n                                </Link>\n                            </h2>\n\n                            <GatsbyImage\n                                image={getImage(node.frontmatter.hero_image)}\n                                alt='test alt text.'\n                            />\n\n                            <p>{node.frontmatter.short}</p>\n\n                            <div className='mt-auto'>\n                                <hr/>\n                                <p>{node.frontmatter.date}</p>\n                                <p>{node.frontmatter.author}</p>\n                            </div>\n                        </article>\n\n                ))\n            }\n        </div>\n    </Layout> \n\n)\n\n}\n\nexport const query = graphql`\nquery thoughtList {\n    allMdx(sort: {fields: frontmatter___date, order: DESC}) {\n        nodes {\n            frontmatter {\n                date(formatString: \"MMMM D, YYYY\")\n                title\n                expertise\n                author\n                short\n                hero_alt\n                hero_image {\n                    childImageSharp {\n                      gatsbyImageData\n                    }\n                }\n            }\n            id\n            slug\n            parent {\n                ... on File {\n                    id\n                    name\n                    modifiedTime\n                }\n            }\n            body\n        }\n    }\n}\n`\n\nexport default IndexPage"],"names":["navLinkItem","pageTitle","children","data","useStaticQuery","className","site","siteMetadata","title","to","head","allMdx","nodes","G","image","getImage","frontmatter","hero_image","alt","expertise","short","date","author","slice","map","node","key","id","slug"],"sourceRoot":""}